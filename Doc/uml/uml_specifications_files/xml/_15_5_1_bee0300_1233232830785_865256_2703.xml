<?xml version="1.0" encoding="UTF-8"?>
<magicdraw><state humanType="State" icon="uml_specifications_files/icon_1124046256.png" id="_15_5_1_bee0300_1233232830785_865256_2703"><container humanName="Container" humanType="Region" icon="uml_specifications_files/icon_931160979.png" name="" refid="_15_5_1_bee0300_1233232753426_812675_2640"/><documentation humanName="Documentation" mode="standard">During the parsing, for each variable (a view is also a variable), set variable to a unique value when it is saved, and read the value when it is used (as content constraint or other).
This will create a dummy prolog program that will analyse, when run, if a variable is known at a specific location in the parsing.
If, in prolog logic, the variable is used while not yet known (not yet saved), then it is a postponed variable. This means that we want to use a variable that will be known later on during the parsing.
This is coherent because logol does not impose any left to right or right to left reading.</documentation><incoming humanName="Incoming"><transition humanType="Transition" icon="uml_specifications_files/icon_1847519247.png" isRelationship="true" name="" refid="_15_5_1_bee0300_1233232830832_409864_2705"/></incoming><isComposite humanName="Is Composite" mode="expert">false</isComposite><isLeaf humanName="Is Leaf">false</isLeaf><isOrthogonal humanName="Is Orthogonal" mode="expert">false</isOrthogonal><isSimple humanName="Is Simple" mode="expert">true</isSimple><isSubmachineState humanName="Is Submachine State" mode="expert">false</isSubmachineState><name humanName="Name" mode="standard,expert">Generate prolog</name><namespace humanName="Namespace" humanType="Region" icon="uml_specifications_files/icon_931160979.png" name="" refid="_15_5_1_bee0300_1233232753426_812675_2640"/><outgoing humanName="Outgoing"><transition humanType="Transition" icon="uml_specifications_files/icon_1847519247.png" isRelationship="true" name="" refid="_15_5_1_bee0300_1233233167895_381229_2735"/></outgoing><ownedComment humanName="Owned Comment"><comment humanType="Comment" icon="uml_specifications_files/icon_1116046870.png" refid="_15_5_1_bee0300_1233233109441_223516_2731"/></ownedComment><ownedElement humanName="Owned Element"><comment humanType="Comment" icon="uml_specifications_files/icon_1116046870.png" refid="_15_5_1_bee0300_1233233109441_223516_2731"/></ownedElement><owner humanName="Owner" humanType="Region" icon="uml_specifications_files/icon_931160979.png" mode="standard,expert" name="" refid="_15_5_1_bee0300_1233232753426_812675_2640"/><qualifiedName humanName="Qualified Name" mode="expert">High-Level Use Cases::System1::grammarParser::GrammarParser::secondStepParsing::::Generate prolog</qualifiedName><redefinitionContext humanName="Redefinition Context"><activity humanType="Activity" icon="uml_specifications_files/icon_2066407829.png" name="GrammarParser" refid="_15_5_1_bee0300_1233232417285_857399_2427"/></redefinitionContext><visibility humanName="Visibility">public</visibility></state></magicdraw>